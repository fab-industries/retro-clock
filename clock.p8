pico-8 cartridge // http://www.pico-8.com
version 41
__lua__
--retro clock (v0.01)
--by fab.industries

function _init()
 version="0.01" 
 
 cls(0)
 dst=false
 glyphs={1,3,5,7,9,11,33,35,37,39}
 h=""
 m=""
 s=""
 h1=0
 h2=0
 m1=0
 m2=0
 s1=0
 s2=0
 yr=""
 mo=""
 dy=""
 stopwatch={start=0,stop=0,now=0,int=0,total=0}
 stoph=0
 stopm=0
 stops=0
 stoph1=0
 stoph2=0
 stopm1=0
 stopm2=0
 stops1=0
 stops2=0
 
 stopmode=false
 mode="clock"
end


function _update()
 if mode=="clock" then
  update_clock()
 elseif mode=="stop" then
  update_stop()
 end
end


function _draw()
 if mode=="clock" then
  draw_clock()
 elseif mode=="stop" then
  draw_stop()
 end
end
-->8
--update

function update_clock()
 utc_d=stat(82)
 utc_h=stat(83)
 z_d=stat(92)
 
 if dst then
  z_h=stat(93)+1
 else
  z_h=stat(93)
 end
 
 get_offset()
 
 h=tostr(z_h)
 m=tostr(stat(94))
 s=tostr(stat(95)) 
 yr=tostr(stat(90))
 mo=tostr(stat(91))
 dy=tostr(stat(92))
 
 if (#h==1) h="0"..h
 if (#m==1) m="0"..m
 if (#s==1) s="0"..s
 if (#mo==1) mo="0"..mo
 if (#dy==1) dy="0"..dy
  
 h1=tonum(sub(h,1,1))
 h2=tonum(sub(h,2,2))
 m1=tonum(sub(m,1,1))
 m2=tonum(sub(m,2,2))
 s1=tonum(sub(s,1,1))
 s2=tonum(sub(s,2,2))
 
 if btnp(❎) then
  mode="stop"
 end 
 if btnp(⬆️) then
  if dst==false then
   dst=true
  else
   dst=false
  end
 end 
 
end

function update_stop()
 utc_d=stat(82)
 utc_h=stat(83)
 z_d=stat(92)
 z_h=stat(93)
 
 get_offset()
 
 h=tostr(stat(93))
 m=tostr(stat(94))
 s=tostr(stat(95)) 
 yr=tostr(stat(90))
 mo=tostr(stat(91))
 dy=tostr(stat(92))
 
 if (#h==1) h="0"..h
 if (#m==1) m="0"..m
 if (#s==1) s="0"..s
 
 if (#mo==1) mo="0"..mo
 if (#dy==1) dy="0"..dy
  
 h1=tonum(sub(h,1,1))
 h2=tonum(sub(h,2,2))
 m1=tonum(sub(m,1,1))
 m2=tonum(sub(m,2,2))
 s1=tonum(sub(s,1,1))
 s2=tonum(sub(s,2,2))
 
 if stopmode then
  local nowtime
  nowtime=stopwatch.total+(time()-stopwatch.start)
  stopwatch.now=nowtime
 end
 
 stopm=tostr(flr(stopwatch.now)\60)
 stoph=tostr(stopm\60)
 stops=tostr((flr(stopwatch.now))%60) 
 
 if (#stoph==1) stoph="0"..stoph
 if (#stopm==1) stopm="0"..stopm
 if (#stops==1) stops="0"..stops

 stoph1=tonum(sub(stoph,1,1))
 stoph2=tonum(sub(stoph,2,2))
 stopm1=tonum(sub(stopm,1,1))
 stopm2=tonum(sub(stopm,2,2))
 stops1=tonum(sub(stops,1,1))
 stops2=tonum(sub(stops,2,2))

 if stopmode then
  if btnp(❎) then
   stopmode=false
   stopwatch.stop=time()
   stopwatch.int=stopwatch.stop-stopwatch.start
   stopwatch.total+=stopwatch.int
   stopwatch.int=0
  end
 else
  if btnp(❎) then
   stopmode=true
   stopwatch.start=time()
  end
  
 end
 
 if btnp(🅾️) then
  stopmode=false
  stopwatch.start=0
  stopwatch.stop=0
  stopwatch.total=0
  stopwatch.now=0
 end
 
 if btnp(⬅️) then
  stopmode=false
  stopwatch.start=0
  stopwatch.stop=0
  stopwatch.total=0
  stopwatch.now=0
  mode="clock"
 end
 
end
-->8
--draw

function draw_clock()
 cls(0)

 draw_backg(26)

 --hours
 draw_nixie(glyphs[h1+1],5,26)
 draw_nixie(glyphs[h2+1],21,26)

 --minutes
 draw_nixie(glyphs[m1+1],47,26)
 draw_nixie(glyphs[m2+1],63,26)
 
 --seconds
 draw_nixie(glyphs[s1+1],89,26)
 draw_nixie(glyphs[s2+1],105,26) 

 fillp(0x5faf) 
 rectfill(25,51,101,57,5)
 fillp()
  
 print(dy.."/"..mo.."/"..yr,30,52,9)
 
 if offset>0 then
  print("utc+"..offset,76,52,9)
 elseif offset==0 then 
  print("utc",80,52,9)
 else 
  print("utc-"..offset,76,52,9)
 end
 
 print("❎stopwatch",21,110,5)
 print("⬆️dst",72,110,5)
 if dst then
  print("on",94,110,5)
 else
  print("off",94,110,5)
 end 
end

function draw_stop()
 cls(0)
  
 draw_backg(26)

 --hours
 draw_nixie(glyphs[h1+1],5,26)
 draw_nixie(glyphs[h2+1],21,26)

 --minutes
 draw_nixie(glyphs[m1+1],47,26)
 draw_nixie(glyphs[m2+1],63,26)
 
 --seconds
 draw_nixie(glyphs[s1+1],89,26)
 draw_nixie(glyphs[s2+1],105,26) 

 fillp(0x5faf) 
 rectfill(25,51,101,57,5) 
 fillp()
  
 print(dy.."/"..mo.."/"..yr,30,52,9)
 
 if offset>0 then
  print("utc+"..offset,76,52,9)
 elseif offset==0 then 
  print("utc",80,52,9)
 else 
  print("utc-"..offset,76,52,9)
 end
 
 draw_backg(66)
 
 --stop hours
 draw_nixie(glyphs[stoph1+1],5,66)
 draw_nixie(glyphs[stoph2+1],21,66)
 
 --stop minutes
 draw_nixie(glyphs[stopm1+1],47,66)
 draw_nixie(glyphs[stopm2+1],63,66)
 
 --stop seconds
 draw_nixie(glyphs[stops1+1],89,66)
 draw_nixie(glyphs[stops2+1],105,66) 

 print("❎start/stop",6,110,5)
 print("🅾️reset",62,110,5)
 print("⬅️back",98,110,5) 
end
-->8
--tools

function get_offset()
 if utc_d==z_d then
  offset=z_h-utc_h
 else
  offset=(z_h+24)-utc_h
 end
end

function draw_nixie(sp,x,y)
 spr(41,x,y,2,2)
 spr(43,x,y,2,2)
 spr(45,x,y,2,2)
 spr(sp,x,y,2,2)
 spr(13,x,y,2,2)
 rectfill(x+7,y-2,x+9,y-1,4)
 rectfill(x+7,y+16,x+9,y+17,4)
end

function draw_backg(y)
 fillp(0xebd7)
 rectfill(6,y-2,20,y+17,5)
 rectfill(22,y-2,36,y+17,5)
 rectfill(48,y-2,62,y+17,5)
 rectfill(64,y-2,78,y+17,5)
 rectfill(90,y-2,104,y+17,5)
 rectfill(106,y-2,120,y+17,5)
 fillp()
end
__gfx__
00000000000000999990000000000009900000000000009999900000009999999999990000000000099900000000009999999900000004040400000000000000
00000000000009900099000000000009900000000000099000990000000000000000990000000000999900000000099900000000000040000040000000000000
00700700000099000009900000000009900000000000990000099000000000000009900000000009909900000000099000000000000000000004000000000000
00077000000099000009900000000009900000000000990000099000000000000099000000000099009900000000990000000000000400000000400000000000
00077000000990000000990000000009900000000009900000009900000000000990000000000990009900000000990000000000004000000000040000000000
00700700000990000000990000000009900000000009900000009900000000009900000000009900009900000009900999900000000400000000400000000000
00000000000990000000990000000009900000000000000000009900000000099999000000099000009900000009999000999000004000000000040000000000
00000000000990000000990000000009900000000000000000099000000000099999900000990000009900000009990000009900000400000000400000000000
00000000000990000000990000000009900000000000000009990000000000000009990000900000009900000000000000009900000004000004040000000000
00000000000990000000990000000009900000000000000999000000000000000000990000999999999999000000000000000990000000404040400000000000
00000000000990000000990000000009900000000000009900000000009900000000990000000000009900000000000000000990000000000000000000000000
00000000000990000000990000000009900000000000099000000000009900000000990000000000009900000000000000000990000000000004000000000000
00000000000099000009900000000009900000000000990000000000009900000000990000000000009900000000000000009900000000000000000000000000
00000000000099000009900000000009900000000009900000000000000990000009900000000000009900000009900000009900000000000040000000000000
00000000000009900099000000000009900000000009900000000000000099000099000000000000009900000000999000999000000000000400000000000000
00000000000000999990000000000009900000000009999999999900000009999990000000000000009900000000009999900000000000040000000000000000
00000000000000099000000000099999999990000000099999900000000009999990000000000004040404000000000040000000000040404040400000000000
00000000000000990000000000099999999990000000990000990000000099000099000000000040000000000000004000000000000404040404000000000000
00000000000009900000000000000000009900000009900000099000000990000009900000000400000000000000000000000000000000000040000000000000
00000000000099000000000000000000009900000009900000099000009900000000990000004000000000000000400000000000000000000004000000000000
00000000000990000000000000000000099000000009900000099000009900000000990000000400000000000004000000000000000000000040000000000000
00000000000900000000000000000000099000000009900000099000009900000000990000004004040000000000000000000000000000000400000000000000
00000000009909999990000000000000990000000000990000990000009900000000990000040040004040000004004040400000000000004000000000000000
00000000009999000099000000000000990000000000099999900000000990000009990000004000000004000040400000000000000000000400000000000000
00000000009990000009900000000009900000000000990000990000000099000099990000000000000040000004000000040000000000040000000000000000
00000000009900000000990000000009900000000009900000099000000009999990990000000000000004000040000000004000000000004000000000000000
00000000009900000000990000000099000000000009900000099000000000000000900000000000000000400004000000000400000000040000000000000000
00000000009900000000990000000099000000000009900000099000000000000009900000000000000004000040000000004000000000400000000000000000
00000000009900000000990000000990000000000009900000099000000000000099000000000000000040000000000000000400000004000000000000000000
00000000000990000009900000000990000000000009900000099000000000000990000000040000000004000004000000000000000000400000000000000000
00000000000099000099000000009900000000000000999009990000000000009900000000004040004040000000400000040000000004000000000000000000
00000000000009999990000000009900000000000000009999000000000000099000000000000004040000000000004040400000000040000000000000000000
__map__
0000000000000000000000370000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
